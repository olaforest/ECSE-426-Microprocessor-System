


ARM Macro Assembler    Page 1 


    1 00000000         ; ECSE 426 - Lab 1
    2 00000000         ; Maxim Goukhshtein (ID: 260429739)
    3 00000000         ; Olivier Laforest  (ID: 260469066)
    4 00000000         ; Group #3
    5 00000000         ; Date: February 5th, 2015
    6 00000000         
    7 00000000                 AREA             KalmanFilter, CODE, READONLY
    8 00000000                 EXPORT           kalmanFilter_asm
    9 00000000         
   10 00000000         kalmanFilter_asm
   11 00000000 B40E            PUSH             {R1-R3}     ; push arguments on
                                                             stack
   12 00000002         
   13 00000002         ; load the initial Kalman state
   14 00000002 EDD3 0A00       VLDR.F32         S1, [R3]    ; q
   15 00000006 ED93 1A01       VLDR.F32         S2, [R3, #4] ; r
   16 0000000A EDD3 1A02       VLDR.F32         S3, [R3, #8] ; x
   17 0000000E ED93 2A03       VLDR.F32         S4, [R3, #12] ; p
   18 00000012 EDD3 2A04       VLDR.F32         S5, [R3, #16] ; k
   19 00000016         
   20 00000016         update
   21 00000016         ; do the Kalman filter updates
   22 00000016 2A00            CMP              R2, #0      ; Loop through all 
                                                            the array 
   23 00000018 D012            BEQ              exit        ; If so, leave the 
                                                            loop, otherwise con
                                                            tinue 
   24 0000001A ECB0 3A01       VLDR.F32         S6, [R0], #4 ; measurement
   25 0000001E EE32 2A20       VADD.F32         S4, S4, S1  ; p = p + q
   26 00000022 EE72 3A01       VADD.F32         S7, S4, S2  ; temp = p + r
   27 00000026 EEC2 2A23       VDIV.F32         S5, S4, S7  ; k = p / temp = p 
                                                            / (p + r) 
   28 0000002A EE73 3A61       VSUB.F32         S7, S6, S3  ; temp = measurment
                                                             - x
   29 0000002E EE42 1AA3       VMLA.F32         S3, S5, S7  ; x = x + k * temp 
                                                            = x + k * (measurme
                                                            nt - x)
   30 00000032 EE02 2A62       VMLS.F32         S4, S4, S5  ; p = (1 - k) * p =
                                                             p - p * k
   31 00000036 ECE1 1A01       VSTR.F32         S3, [R1], #4 ; store x in the f
                                                            iltered (output) ar
                                                            ray
   32 0000003A F1A2 0201       SUB              R2, R2, #1  ; R2 = R2 - 1
   33 0000003E E7EA            B                update      ; Go to the beginni
                                                            ng of the loop 
   34 00000040         
   35 00000040         exit
   36 00000040 EEF1 1A10       VMRS             R1, FPSCR   ; copy FPSCR to APS
                                                            R
   37 00000044 F001 009F       AND              R0, R1, #159 ; apply mask to st
                                                            atus register to ex
                                                            tract the floating-
                                                            point exceptions. R
                                                            0 = 0 if no excepti
                                                            on.
   38 00000048         
   39 00000048         ; store the final Kalman state
   40 00000048 EDC3 0A00       VSTR.F32         S1, [R3]    ; store q
   41 0000004C ED83 1A01       VSTR.F32         S2, [R3, #4] ; store r



ARM Macro Assembler    Page 2 


   42 00000050 EDC3 1A02       VSTR.F32         S3, [R3, #8] ; store x
   43 00000054 ED83 2A03       VSTR.F32         S4, [R3, #12] ; store p
   44 00000058 EDC3 2A04       VSTR.F32         S5, [R3, #16] ; store k
   45 0000005C         
   46 0000005C BC0E            POP              {R1-R3}     ; pop arguments fro
                                                            m stack
   47 0000005E 4770            BX               LR
   48 00000060                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
ect\kalmanfilter.d -o.\object\kalmanfilter.o -I"C:\Users\Maxim\Documents\McGill
\Winter 2015\ECSE 426\Labs\Lab 2\Lab 2 Base Project\Lab 2 Base Project\RTE" -I"
C:\Users\Maxim\Documents\McGill\Winter 2015\ECSE 426\Labs\Lab 2\Lab 2 Base Proj
ect\Lab 2 Base Project\RTE\Device\STM32F407VG" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Inclu
de -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\StdPeriph_Driver\inc -
-predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISI
ON_VERSION SETA 513" --predefine="_RTE_ SETA 1" --predefine="STM32F40_41xxx SET
A 1" --list=.\listings\kalmanfilter.lst KalmanFilter.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

KalmanFilter 00000000

Symbol: KalmanFilter
   Definitions
      At line 7 in file KalmanFilter.s
   Uses
      None
Comment: KalmanFilter unused
exit 00000040

Symbol: exit
   Definitions
      At line 35 in file KalmanFilter.s
   Uses
      At line 23 in file KalmanFilter.s
Comment: exit used once
kalmanFilter_asm 00000000

Symbol: kalmanFilter_asm
   Definitions
      At line 10 in file KalmanFilter.s
   Uses
      At line 8 in file KalmanFilter.s
Comment: kalmanFilter_asm used once
update 00000016

Symbol: update
   Definitions
      At line 20 in file KalmanFilter.s
   Uses
      At line 33 in file KalmanFilter.s
Comment: update used once
4 symbols
340 symbols in table
